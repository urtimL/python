"""
Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов 
второго множества. Затем пользователь вводит сами элементы множеств.
"""
# n = int(input("введите кол-во элементов первого множества "))
# m = int(input("введите кол-во элементов второго множества "))

# listN = []
# listM = []

# for i in range(n):
#     listN.append(int(input(f"введите - {i + 1} элемент первого множества ")))

# for i in range(m):
#     listM.append(int(input(f"введите - {i + 1} элемент второго множества ")))

# print(f"первое множество - {listN}")
# print(f"второе множество - {listM}")

# setN = set(listN)
# setM = set(listM)

# print(setN.intersection(setM))
"""
Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, 
причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. 
Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число 
ягод – на i-ом кусте выросло ai ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из 
управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь 
непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может собрать за один 
заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

"""
n = int(input("введите количество кустов на грядке ")) 
a = int(input("введите урожайность первого куста ")) # урожайность последующих получим умножая данное значение на номер куста
i = int(input(f"введите номер куста в диапазоне от 1 до {n} "))

if i > n or i < 1:
    print("на грядке нет куста с таким номером ")
elif i == 1:
    print((n + 1 + (i + 1)) * a)
elif i == n:
    print(((n - 1) + n + 1) * a)
else:
    print(((i - 1) + i + (i + 1)) * a)
